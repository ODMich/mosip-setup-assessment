name: MOSIP CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NAMESPACE: mosip

jobs:
  validate-manifests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate Kubernetes manifests
      run: |
        kubectl apply --dry-run=client -f k8s/namespace.yaml
        kubectl apply --dry-run=client -f k8s/configmaps/
        kubectl apply --dry-run=client -f k8s/postgresql.yaml
        kubectl apply --dry-run=client -f k8s/redis.yaml
        kubectl apply --dry-run=client -f k8s/id-auth-deployment.yaml
        kubectl apply --dry-run=client -f k8s/reg-deployment.yaml
        kubectl apply --dry-run=client -f k8s/ingress.yaml

    - name: Run kubeval
      uses: instrumenta/kubeval-action@master
      with:
        files: k8s/

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Checkov security scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: k8s/

  deploy-to-kubernetes:
    needs: [validate-manifests, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2
      with:
        minikube version: 'latest'
        kubernetes version: 'v1.26.0'
        start args: '--addons=ingress --cpus=4 --memory=8192'

    - name: Create namespace
      run: kubectl apply -f k8s/namespace.yaml

    - name: Create secrets
      run: |
        kubectl create secret generic mosip-secrets \
          --namespace mosip \
          --from-literal=db-username=mosipuser \
          --from-literal=db-password=mosippassword \
          --from-literal=redis-password=redispassword \
          --from-literal=jwt-secret=myjwtsecret123 \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy dependencies
      run: |
        kubectl apply -f k8s/postgresql.yaml
        kubectl apply -f k8s/redis.yaml
        kubectl rollout status deployment/postgresql -n mosip --timeout=180s
        kubectl rollout status deployment/redis -n mosip --timeout=180s

    - name: Deploy MOSIP services
      run: |
        kubectl apply -f k8s/configmaps/
        kubectl apply -f k8s/id-auth-deployment.yaml
        kubectl apply -f k8s/reg-deployment.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: Wait for deployment
      run: |
        kubectl rollout status deployment/id-authentication -n mosip --timeout=300s
        kubectl rollout status deployment/registration -n mosip --timeout=300s

    - name: Run smoke tests
      run: |
        chmod +x scripts/smoke-tests.sh
        ./scripts/smoke-tests.sh

    - name: Rollback on failure
      if: failure()
      run: |
        echo "ðŸš¨ Deployment failed - initiating rollback"
        kubectl rollout undo deployment/id-authentication -n mosip
        kubectl rollout undo deployment/registration -n mosip
        kubectl rollout status deployment/id-authentication -n mosip --timeout=180s
        kubectl rollout status deployment/registration -n mosip --timeout=180s
        echo "âœ… Rollback completed successfully"
        exit 1

  deploy-monitoring:
    needs: deploy-to-kubernetes
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2

    - name: Deploy monitoring stack
      run: |
        kubectl apply -f k8s/monitoring/
        sleep 30  # Wait for monitoring to be ready

    - name: Verify monitoring
      run: |
        kubectl get pods -n mosip | grep -E "(prometheus|grafana)"