apiVersion: apps/v1
kind: Deployment
metadata:
  name: regclient
  namespace: mosip
  labels:
    app: regclient
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: regclient
  template:
    metadata:
      labels:
        app: regclient
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io.port: "8081"
        prometheus.io.path: "/registration/actuator/prometheus"
        logging.capture: "true"
        logging.format: "json"
        logging.service: "regclient"
    spec:
      containers:
      - name: regclient
        image: mosipid/registration-client
        ports:
        - containerPort: 8081
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "development"
        - name: LOGGING_LEVEL_IO_MOSIP
          value: "INFO"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /registration/actuator/health
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /registration/actuator/health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        startupProbe:
          httpGet:
            path: /registration/actuator/health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: regclient-service
  namespace: mosip
  labels:
    app: regclient
spec:
  selector:
    app: regclient
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
  type: ClusterIP